-- 1. Pull total number of orders that were completed on 18th March 2023
SELECT COUNT(DISTINCT order_id) AS total_orders
FROM SALES
WHERE DATE = '2023-03-18';

-- 2. Pull total number of orders that were completed on 18th March 2023 with the first name ‘John’ and last name ‘Doe’
SELECT COUNT(DISTINCT S.order_id) AS total_orders
FROM SALES S
JOIN CUSTOMERS C ON S.customer_id = C.customer_id
WHERE S.DATE = '2023-03-18'
  AND C.first_name = 'John'
  AND C.last_name = 'Doe';

-- 3. Pull the total number of customers that purchased in January 2023 and the average amount spent per customer
SELECT COUNT(DISTINCT S.customer_id) AS total_customers, 
       AVG(S.revenue) AS avg_spent_per_customer
FROM SALES S
WHERE S.DATE BETWEEN '2023-01-01' AND '2023-01-31';

-- 4. Pull the departments that generated less than $600 in 2022
SELECT I.department, SUM(S.revenue) AS total_revenue
FROM SALES S
JOIN ITEMS I ON S.item_id = I.item_id
WHERE YEAR(S.DATE) = 2022
GROUP BY I.department
HAVING total_revenue < 600;

-- 5. What is the most and least revenue generated by a single order?
SELECT 
    MAX(total_revenue) AS max_order_revenue,
    MIN(total_revenue) AS min_order_revenue
FROM (
    SELECT order_id, SUM(revenue) AS total_revenue
    FROM SALES
    GROUP BY order_id
) AS order_totals;

-- 6. What were the items in the most lucrative order?
WITH Most_Lucrative AS (
    SELECT order_id, SUM(revenue) AS total_revenue
    FROM SALES
    GROUP BY order_id
    ORDER BY total_revenue DESC
    LIMIT 1
)
SELECT S.order_id, I.item_name, S.quantity, S.revenue
FROM SALES S
JOIN ITEMS I ON S.item_id = I.item_id
WHERE S.order_id = (SELECT order_id FROM Most_Lucrative);
